// 직사각형 만들기

    // 문제 설명
    // 직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 점 3개의 좌표가 들어있는 배열 v가 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution 함수를 완성해주세요. 단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.

    // 제한사항
    // v는 세 점의 좌표가 들어있는 2차원 배열입니다.
    // v의 각 원소는 점의 좌표를 나타내며, 좌표는 [x축 좌표, y축 좌표] 순으로 주어집니다.
    // 좌표값은 1 이상 10억 이하의 자연수입니다.
    // 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 [x축 좌표, y축 좌표] 순으로 담아 return 해주세요.
    // 입출력 예
    // v	result
    // [[1, 4], [3, 4], [3, 10]]	[1, 10]
    // [[1, 1], [2, 2], [1, 2]]	[2, 1]
    // 입출력 예 설명
    // 입출력 예 #1
    // 세 점이 [1, 4], [3, 4], [3, 10] 위치에 있을 때, [1, 10]에 점이 위치하면 직사각형이 됩니다.

    // 입출력 예 #2
    // 세 점이 [1, 1], [2, 2], [1, 2] 위치에 있을 때, [2, 1]에 점이 위치하면 직사각형이 됩니다.
    
    // 풀이
    
    1. 3점 x축, y축 값 변수에 X = [a, b, c]  Y = [a, b, c] 형식으로 저장하기
    2. 구해야 할 점 값은 X축,Y축에서 각각 중복되지 않은 데이터를 넣으면 됌 (ex: X = [1, 1, 10] -> 10) (ex: Y = [3, 3, 7] -> 7)
    2. x축 a, b를 더하고 2로 나눳을때 a가 나온다면 중복되는 값이므로 c를 넣음
    
    // 코드
    
    function solution(v) {
    var answer = [        
    ];
    var a = [];
    var b = [];
    for(var i=0; i<v.length; i++) {
        a.push(v[i][0])
        b.push(v[i][1])
    }
    a.sort()
    b.sort()
    if((a[0]+a[1])/2 === a[0]) {
        answer.push(a[2])
    } else if((a[1]+a[2])/2 === a[1]) {
        answer.push(a[0])
    } else if((a[0]+a[2])/2 === a[0]) {
        answer.push(a[1])
    }
    
    if((b[0]+b[1])/2 === b[0]) {
        answer.push(b[3])
    } else if((b[1]+b[2])/2 === b[1]) {
        answer.push(b[0])
    } else if((b[0]+b[2])/2 === b[0]) {
        answer.push(b[1])
    }

    return answer;
}
