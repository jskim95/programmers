// 시저 암호

// 문제 설명
// 어떤 문장의 각 알파벳을 일정한 거리만큼 밀어서
// 다른 알파벳으로 바꾸는 암호화 방식을 시저 암호라고 합니다.
// 예를 들어 AB는 1만큼 밀면 BC가 되고, 3만큼 밀면 DE가 됩니다.
// z는 1만큼 밀면 a가 됩니다. 
// 문자열 s와 거리 n을 입력받아 s를 n만큼 민 암호문을 만드는 함수, solution을 완성해 보세요.

// 제한 조건
// 공백은 아무리 밀어도 공백입니다.
// s는 알파벳 소문자, 대문자, 공백으로만 이루어져 있습니다.
// s의 길이는 8000이하입니다.
// n은 1 이상, 25이하인 자연수입니다.

// 입출력 예
// s	n	result
// AB	1	BC
// z	1	a
// a B z	4	e F d





// 풀이
// 1. s문자열을 배열로 변환한다.
// 2. 인덱스(0~마지막까지) 숫자로 변환하고 n만큼 더한다. (공백일 경우 n만큼 안더함) 

// (여기서부터 막힘)
// 3. n만큼 증가한 숫자를 문자열로 바꿔야하는데
//    배열로 삽입 되어있어서 변환하기 힘듬(배열은 fromCharCode을 사용해서 문자열로 변환 불가??)
// 4. join함수를 사용해 배열을 문자형숫자로 바꾸고 
// 5. 문자로 변환 시켜야 되는데 막힘

function solution(s, n) {    
    var num = [];
    var answer = [];
    for(var i=0; i<s.length; i++) {
        
        num[i] = s.charCodeAt(i)+n
        
        if(num[i] == 36) {
            num[i] = 32;
        }       
    }
    var answer = num.join("{");
    
    return answer;
}
